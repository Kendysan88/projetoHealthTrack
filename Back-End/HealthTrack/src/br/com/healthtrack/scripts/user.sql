--- DROP TABLE T_HT_USER CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_USER;

CREATE TABLE T_HT_USER(
  user_id    NUMBER       NOT NULL,
  email      VARCHAR2(25) NOT NULL,
  password   VARCHAR2(15) NOT NULL,
  nickname   VARCHAR2(25),
  birth_date DATE         NOT NULL
);

CREATE SEQUENCE SQ_HT_USER INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_USER ADD CONSTRAINT PK_HT_USER PRIMARY KEY (user_id);
ALTER TABLE T_HT_USER ADD CONSTRAINT UN_HT_USER_EMAIL UNIQUE (email);

---

--- MODELO

INSERT INTO T_HT_USER (
  email,
  password,
  nickname,
  birth_date,
) VALUES (
  [EMAIL DO USUÁRIO],
  [SENHA DO USUÁRIO],
  [APELIDO DO USUÁRIO],
  '[DATA DE NASCIMENTO DO USUÁRIO]'
);

UPDATE T_HT_USER SET
  email = [EMAIL DO USUÁRIO],
  password = [SENHA DO USUÁRIO],
  nickname = [APELIDO DO USUÁRIO],
  birth_date = '[DATA DE NASCIMENTO DO USUÁRIO]'
WHERE user_id = [IDENTIFICADOR DO USUÁRIO];


--- Consultar os dados de um determinado usuário
--- (filtrar a partir do seu código).

SELECT U.EMAIL, U.PASSWORD, U.NICKNAME, U.BIRTH_DATE
FROM T_HT_USER U
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO];

--- Consultar os dados básicos de um determinado
--- usuário, o último peso registrado e a última
--- pressão arterial registrada (filtrar a partir
--- do código de usuário.
SELECT U.EMAIL,
       U.NICKNAME,
       W.VALUE AS WEIGHT_VALUE,
       W.UNITY_PREFIX AS WEIGHT_UNITY_PREFIX,
       W.DATE_TIME AS WEIGHT_DATE_TIME,
       BD.DIASTOLIC_VALUE,
       BD.SYSTOLIC_VALUE,
       BD.UNIT_PREFIX AS BLOOD_PREASSURE_UNIT_PREFIX,
       BD.DATE_TIME AS BLOOD_PREASSURE_DATE_TIME
FROM T_HT_USER U
JOIN T_HT_WEIGHT W ON U.USER_ID = W.USER_ID
JOIN T_HT_BLOOD_PREASSURE BD ON BD.USER_ID = U.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO]
ORDER BY W.DATE_TIME, BD.DATE_TIME DESC LIMIT 1;
