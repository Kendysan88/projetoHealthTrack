--- DROP TABLE T_HT_BLOOD_PREASSURE CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_BLOOD_PREASSURE;

CREATE TABLE T_HT_BLOOD_PREASSURE(
  blood_preassure_id NUMBER      NOT NULL,
  user_id            NUMBER      NOT NULL,
  unit_prefix        VARCHAR2(5) NOT NULL,
  diastolic_value    NUMBER(3)   NOT NULL,
  systolic_value     NUMBER(3)   NOT NULL,
  date_time          TIMESTAMP   NOT NULL
);

CREATE SEQUENCE SQ_HT_BLOOD_PREASSURE INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_BLOOD_PREASSURE ADD CONSTRAINT PK_HT_BLOOD_PREASSURE PRIMARY KEY (blood_preassure_id);

ALTER TABLE T_HT_BLOOD_PREASSURE ADD CONSTRAINT FK_HT_BLOOD_PRE_AND_MEASUR_UNIT
  FOREIGN KEY (unit_prefix) REFERENCES T_HT_MEASUREMENT_UNIT (unit_prefix);

ALTER TABLE T_HT_BLOOD_PREASSURE ADD CONSTRAINT FK_HT_BLOOD_PRE_AND_USER
  FOREIGN KEY (user_id) REFERENCES T_HT_USER (user_id) ON DELETE CASCADE;

---

--- DROP TABLE T_HT_HEIGHT CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_HEIGHT;

CREATE TABLE T_HT_HEIGHT(
  height_id   NUMBER      NOT NULL,
  user_id     NUMBER      NOT NULL,
  unit_prefix VARCHAR2(5) NOT NULL,
  value       NUMBER(3,2) NOT NULL,
  date_time   TIMESTAMP   NOT NULL
);

CREATE SEQUENCE SQ_HT_HEIGHT INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_HEIGHT ADD CONSTRAINT PK_HT_HEIGHT PRIMARY KEY (height_id);

ALTER TABLE T_HT_HEIGHT ADD CONSTRAINT FK_HT_HEIGHT_AND_MEASUR_UNIT
  FOREIGN KEY (unit_prefix) REFERENCES T_HT_MEASUREMENT_UNIT (unit_prefix);

ALTER TABLE T_HT_HEIGHT ADD CONSTRAINT FK_HT_HEIGHT_AND_USER
  FOREIGN KEY (user_id) REFERENCES T_HT_USER (user_id) ON DELETE CASCADE;

---

--- DROP TABLE T_HT_WEIGHT CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_WEIGHT;

CREATE TABLE T_HT_WEIGHT(
  weight_id   NUMBER      NOT NULL,
  user_id     NUMBER      NOT NULL,
  unit_prefix VARCHAR2(5) NOT NULL,
  value       NUMBER(3,2) NOT NULL,
  date_time   TIMESTAMP   NOT NULL
);

CREATE SEQUENCE SQ_HT_WEIGHT INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_WEIGHT ADD CONSTRAINT PK_HT_WEIGHT PRIMARY KEY (weight_id);

ALTER TABLE T_HT_WEIGHT ADD CONSTRAINT FK_HT_WEIGHT_AND_MEASUR_UNIT
  FOREIGN KEY (unit_prefix) REFERENCES T_HT_MEASUREMENT_UNIT (unit_prefix);

ALTER TABLE T_HT_WEIGHT ADD CONSTRAINT FK_HT_WEIGHT_AND_USER
  FOREIGN KEY (user_id) REFERENCES T_HT_USER (user_id) ON DELETE CASCADE;

---

--- MODELO

INSERT INTO T_HT_BLOOD_PREASSURE (
  user_id,
  unit_prefix,
  diastolic_value,
  systolic_value,
  date_time
) VALUES (
  [IDENTIFICADOR DO USUÁRIO],
  [UNIDADE DE MEDIDA],
  [VALOR DIASTÓLICO],
  [VALOR SISTÓLICO],
  '[DATA E HORA DA MEDIÇÃO]'
);

UPDATE T_HT_BLOOD_PREASSURE SET
  unit_prefix = [UNIDADE DE MEDIDA],
  diastolic_value = [VALOR DIASTÓLICO],
  systolic_value = [VALOR SISTÓLICO],
  date_time = '[DATA E HORA DA MEDIÇÃO]'
WHERE user_id = [IDENTIFICADOR DO USUÁRIO]
  AND blood_preassure_id = [IDENTIFICADOR DA MEDIÇÃO];

INSERT INTO T_HT_HEIGHT (
  user_id,
  unit_prefix,
  value,
  date_time
) VALUES (
  [IDENTIFICADOR DO USUÁRIO],
  [UNIDADE DE MEDIDA],
  [ALTURA DO USUÁRIO],
  '[DATA E HORA DA MEDIÇÃO]'
);

UPDATE T_HT_HEIGHT SET
  unit_prefix = [UNIDADE DE MEDIDA],
  value = [ALTURA DO USUÁRIO],
  date_time = '[DATA E HORA DA MEDIÇÃO]'
WHERE user_id = [IDENTIFICADOR DO USUÁRIO]
  AND height_id = [IDENTIFICADOR DA MEDIÇÃO];

INSERT INTO T_HT_WEIGHT (
  user_id,
  unit_prefix,
  value,
  date_time
) VALUES (
  [IDENTIFICADOR DO USUÁRIO],
  [UNIDADE DE MEDIDA],
  [PESO DO USUÁRIO],
  '[DATA E HORA DA MEDIÇÃO]'
);

UPDATE T_HT_WEIGHT SET
  unit_prefix = [UNIDADE DE MEDIDA],
  value = [PESO DO USUÁRIO],
  date_time = '[DATA E HORA DA MEDIÇÃO]'
WHERE user_id = [IDENTIFICADOR DO USUÁRIO]
  AND weight_id = [IDENTIFICADOR DA MEDIÇÃO];

--- Consultar todos os dados de todos os registros de peso
--- de um determinado usuário, ordenando-os dos registros
--- mais recentes para os mais antigos (filtrar a partir
--- do seu código).

SELECT W.VALUE, W.UNITY_PREFIX, W.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_WEIGHT W ON U.USER_ID = W.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO]
ORDER BY W.DATE_TIME DESC;

--- Consultar todos os dados de um único registro de peso
--- de um determinado usuário (filtrar a partir do código
--- do usuário e do código de peso).

SELECT W.VALUE, W.UNITY_PREFIX, W.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_WEIGHT W ON U.USER_ID = W.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO] AND W.WEIGHT_ID = [IDENTIFICADOR DE PESO]
ORDER BY W.DATE_TIME DESC;

--- Consultar todos os dados de todos os registros de
--- pressão arterial de um determinado usuário,
--- ordenando-os dos registros mais recentes para os
--- mais antigos (filtrar a partir do seu código).

SELECT BD.DIASTOLIC_VALUE, BD.SYSTOLIC_VALUE, BD.UNIT_PREFIX, BD.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_BLOOD_PREASSURE BD ON U.USER_ID = BD.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO]
ORDER BY BD.DATE_TIME DESC;

--- Consultar todos os dados de um único registro de
--- pressão arterial de um determinado usuário
--- (filtrar a partir do código do usuário e do
--- código de pressão).

SELECT BD.DIASTOLIC_VALUE, BD.SYSTOLIC_VALUE, BD.UNIT_PREFIX, BD.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_BLOOD_PREASSURE BD ON U.USER_ID = BD.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO] AND BD.BLOOD_PREASSURE_ID = [IDENTIFICADOR DA PRESSÃO ARTERIAL]
ORDER BY BD.DATE_TIME DESC;
