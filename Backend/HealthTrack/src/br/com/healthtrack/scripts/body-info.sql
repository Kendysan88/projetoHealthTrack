--- DROP TABLE T_HT_BLOOD_PREASSURE CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_BLOOD_PREASSURE;

CREATE TABLE T_HT_BLOOD_PREASSURE(
  BLOOD_PREASSURE_ID NUMBER                     NOT NULL,
  USER_ID            NUMBER                     NOT NULL,
  UNIT_PREFIX        VARCHAR2(5) DEFAULT 'mmHg' NOT NULL,
  DIASTOLIC_VALUE    NUMBER(3)                  NOT NULL,
  SYSTOLIC_VALUE     NUMBER(3)                  NOT NULL,
  DATE_TIME          TIMESTAMP                  NOT NULL
);

CREATE SEQUENCE SQ_HT_BLOOD_PREASSURE INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_BLOOD_PREASSURE ADD CONSTRAINT PK_HT_BLOOD_PREASSURE
  PRIMARY KEY (BLOOD_PREASSURE_ID);

ALTER TABLE T_HT_BLOOD_PREASSURE ADD CONSTRAINT ENUM_HT_BL_PRS_UNIT_PREFIX
  CHECK(LOWER(UNIT_PREFIX) IN ( 'mmHg' ));

ALTER TABLE T_HT_BLOOD_PREASSURE ADD CONSTRAINT FK_HT_BLOOD_PRE_AND_USER
  FOREIGN KEY (USER_ID) REFERENCES T_HT_USER (USER_ID) ON DELETE CASCADE;

---

--- DROP TABLE T_HT_HEIGHT CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_HEIGHT;

CREATE TABLE T_HT_HEIGHT(
  HEIGHT_ID   NUMBER                  NOT NULL,
  USER_ID     NUMBER                  NOT NULL,
  UNIT_PREFIX VARCHAR2(5) DEFAULT 'm' NOT NULL,
  VALUE       NUMBER(3,2)             NOT NULL,
  DATE_TIME   TIMESTAMP               NOT NULL
);

CREATE SEQUENCE SQ_HT_HEIGHT INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_HEIGHT ADD CONSTRAINT PK_HT_HEIGHT
  PRIMARY KEY (HEIGHT_ID);

ALTER TABLE T_HT_HEIGHT ADD CONSTRAINT ENUM_HT_HEIGHT_UNIT_PREFIX
  CHECK(LOWER(UNIT_PREFIX) IN ( 'm' ));

ALTER TABLE T_HT_HEIGHT ADD CONSTRAINT FK_HT_HEIGHT_AND_USER
  FOREIGN KEY (USER_ID) REFERENCES T_HT_USER (USER_ID) ON DELETE CASCADE;

---

--- DROP TABLE T_HT_WEIGHT CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_WEIGHT;

CREATE TABLE T_HT_WEIGHT(
  WEIGHT_ID   NUMBER                   NOT NULL,
  USER_ID     NUMBER                   NOT NULL,
  UNIT_PREFIX VARCHAR2(5) DEFAULT 'kg' NOT NULL,
  VALUE       NUMBER(3,2)              NOT NULL,
  DATE_TIME   TIMESTAMP                NOT NULL
);

CREATE SEQUENCE SQ_HT_WEIGHT INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_WEIGHT ADD CONSTRAINT PK_HT_WEIGHT
  PRIMARY KEY (WEIGHT_ID);

ALTER TABLE T_HT_WEIGHT ADD CONSTRAINT ENUM_HT_WEIGHT_UNIT_PREFIX
  CHECK(LOWER(UNIT_PREFIX) IN ( 'kg' ));

ALTER TABLE T_HT_WEIGHT ADD CONSTRAINT FK_HT_WEIGHT_AND_USER
  FOREIGN KEY (USER_ID) REFERENCES T_HT_USER (USER_ID) ON DELETE CASCADE;

---

--- MODELO

INSERT INTO T_HT_BLOOD_PREASSURE (
  USER_ID,
  DIASTOLIC_VALUE,
  SYSTOLIC_VALUE,
  DATE_TIME
) VALUES (
  [IDENTIFICADOR DO USUÁRIO],
  [VALOR DIASTÓLICO],
  [VALOR SISTÓLICO],
  '[DATA E HORA DA MEDIÇÃO]'
);

UPDATE T_HT_BLOOD_PREASSURE SET
  DIASTOLIC_VALUE = [VALOR DIASTÓLICO],
  SYSTOLIC_VALUE = [VALOR SISTÓLICO],
  DATE_TIME = '[DATA E HORA DA MEDIÇÃO]'
WHERE USER_ID = [IDENTIFICADOR DO USUÁRIO]
  AND BLOOD_PREASSURE_ID = [IDENTIFICADOR DA MEDIÇÃO];

INSERT INTO T_HT_HEIGHT (
  USER_ID,
  VALUE,
  DATE_TIME
) VALUES (
  [IDENTIFICADOR DO USUÁRIO],
  [ALTURA DO USUÁRIO],
  '[DATA E HORA DA MEDIÇÃO]'
);

UPDATE T_HT_HEIGHT SET
  VALUE = [ALTURA DO USUÁRIO],
  DATE_TIME = '[DATA E HORA DA MEDIÇÃO]'
WHERE USER_ID = [IDENTIFICADOR DO USUÁRIO]
  AND HEIGHT_ID = [IDENTIFICADOR DA MEDIÇÃO];

INSERT INTO T_HT_WEIGHT (
  USER_ID,
  VALUE,
  DATE_TIME
) VALUES (
  [IDENTIFICADOR DO USUÁRIO],
  [PESO DO USUÁRIO],
  '[DATA E HORA DA MEDIÇÃO]'
);

UPDATE T_HT_WEIGHT SET
  VALUE = [PESO DO USUÁRIO],
  DATE_TIME = '[DATA E HORA DA MEDIÇÃO]'
WHERE USER_ID = [IDENTIFICADOR DO USUÁRIO]
  AND WEIGHT_ID = [IDENTIFICADOR DA MEDIÇÃO];

--- Consultar todos os dados de todos os registros de peso
--- de um determinado usuário, ordenando-os dos registros
--- mais recentes para os mais antigos (filtrar a partir
--- do seu código).

SELECT W.VALUE, W.UNITY_PREFIX, W.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_WEIGHT W ON U.USER_ID = W.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO]
ORDER BY W.DATE_TIME DESC;

--- Consultar todos os dados de um único registro de peso
--- de um determinado usuário (filtrar a partir do código
--- do usuário e do código de peso).

SELECT W.VALUE, W.UNITY_PREFIX, W.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_WEIGHT W ON U.USER_ID = W.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO] AND W.WEIGHT_ID = [IDENTIFICADOR DE PESO]
ORDER BY W.DATE_TIME DESC;

--- Consultar todos os dados de todos os registros de
--- pressão arterial de um determinado usuário,
--- ordenando-os dos registros mais recentes para os
--- mais antigos (filtrar a partir do seu código).

SELECT BD.DIASTOLIC_VALUE, BD.SYSTOLIC_VALUE, BD.UNIT_PREFIX, BD.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_BLOOD_PREASSURE BD ON U.USER_ID = BD.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO]
ORDER BY BD.DATE_TIME DESC;

--- Consultar todos os dados de um único registro de
--- pressão arterial de um determinado usuário
--- (filtrar a partir do código do usuário e do
--- código de pressão).

SELECT BD.DIASTOLIC_VALUE, BD.SYSTOLIC_VALUE, BD.UNIT_PREFIX, BD.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_BLOOD_PREASSURE BD ON U.USER_ID = BD.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO] AND BD.BLOOD_PREASSURE_ID = [IDENTIFICADOR DA PRESSÃO ARTERIAL]
ORDER BY BD.DATE_TIME DESC;
