--- DROP TABLE T_HT_MEAL_TYPE CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_MEAL_TYPE;

CREATE TABLE T_HT_MEAL_TYPE(
  MEAL_TYPE_ID NUMBER       NOT NULL,
  NAME         VARCHAR2(25) NOT NULL,
  NAME_UN      AS (LOWER(NAME)),
  DESCRIPTION  VARCHAR2(50) DEFAULT NULL
);

CREATE SEQUENCE SQ_HT_MEAL_TYPE INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_MEAL_TYPE ADD CONSTRAINT PK_HT_MEAL_TYPE
  PRIMARY KEY (MEAL_TYPE_ID);

ALTER TABLE T_HT_MEAL_TYPE ADD CONSTRAINT UN_HT_MEAL_TYPE_NAME
  UNIQUE (NAME_UN);

---

--- DROP TABLE T_HT_FOOD CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_FOOD;

CREATE TABLE T_HT_FOOD(
  FOOD_ID     NUMBER        NOT NULL,
  UNIT_PREFIX VARCHAR2(5)   NOT NULL,
  AMOUNT      NUMBER(7,2)   NOT NULL,
  CALORIES    NUMBER(7,2)   NOT NULL,
  NAME        VARCHAR2(100) NOT NULL,
  NAME_UN     AS (LOWER(NAME)),
  DESCRIPTION VARCHAR2(255) DEFAULT NULL
);

CREATE SEQUENCE SQ_HT_FOOD INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_FOOD ADD CONSTRAINT PK_HT_FOOD
  PRIMARY KEY (FOOD_ID);

ALTER TABLE T_HT_FOOD ADD CONSTRAINT UN_HT_FOOD_NAME
  UNIQUE (NAME_UN);

ALTER TABLE T_HT_FOOD ADD CONSTRAINT ENUM_HT_FOOD_UNIT_PREFIX
  CHECK(LOWER(UNIT_PREFIX) IN ( 'g','ml' ));

---

--- DROP TABLE T_HT_MEAL CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_MEAL;

CREATE TABLE T_HT_MEAL(
  MEAL_ID      NUMBER    NOT NULL,
  USER_ID      NUMBER    NOT NULL,
  MEAL_TYPE_ID NUMBER    NOT NULL,
  DATE_TIME    TIMESTAMP NOT NULL
);

CREATE SEQUENCE SQ_HT_MEAL INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_MEAL ADD CONSTRAINT PK_HT_MEAL
  PRIMARY KEY (MEAL_ID);

ALTER TABLE T_HT_MEAL ADD CONSTRAINT FK_HT_MEAL_AND_MEAL_TYPE
  FOREIGN KEY (MEAL_TYPE_ID) REFERENCES T_HT_MEAL_TYPE (MEAL_TYPE_ID);

ALTER TABLE T_HT_MEAL ADD CONSTRAINT FK_HT_MEAL_AND_USER
  FOREIGN KEY (USER_ID) REFERENCES T_HT_USER (USER_ID) ON DELETE CASCADE;

---

--- DROP TABLE T_HT_FOOD_ITEM CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_FOOD_ITEM;

CREATE TABLE T_HT_FOOD_ITEM(
  FOOD_ID   NUMBER      NOT NULL,
  MEAL_ID   NUMBER      NOT NULL,
  AMOUNT    NUMBER(7,2) NOT NULL,
  CALORIES  NUMBER(7,2) NOT NULL
);

ALTER TABLE T_HT_FOOD_ITEM ADD CONSTRAINT PK_HT_FOOD_ITEM
  PRIMARY KEY (FOOD_ID, MEAL_ID);

ALTER TABLE T_HT_FOOD_ITEM ADD CONSTRAINT FK_HT_FOOD_ITEM_AND_FOOD
  FOREIGN KEY (FOOD_ID) REFERENCES T_HT_FOOD (FOOD_ID);

ALTER TABLE T_HT_FOOD_ITEM ADD CONSTRAINT FK_HT_FOOD_ITEM_AND_MEAL
  FOREIGN KEY (MEAL_ID) REFERENCES T_HT_MEAL (MEAL_ID) ON DELETE CASCADE;

---

--- MODELO

INSERT INTO T_HT_MEAL (
  MEAL_ID,
  USER_ID,
  MEAL_TYPE_ID,
  DATE_TIME
) VALUES (
  [IDENTIFICADOR DA REFEIÇÃO],
  [IDENTIFICADOR DO USUÁRIO],
  [IDENTIFICADOR DO TIPO DE REFEIÇÃO],
  '[DATA E HORA DA REFEIÇÃO]'
);

UPDATE T_HT_MEAL SET
  MEAL_TYPE_ID = [IDENTIFICADOR DO TIPO DE REFEIÇÃO],
  DATE_TIME = '[DATA E HORA DA REFEIÇÃO]'
WHERE USER_ID = [IDENTIFICADOR DO USUÁRIO]
  AND MEAL_ID = [IDENTIFICADOR DA REFEIÇÃO];

INSERT INTO T_HT_FOOD_ITEM (
  FOOD_ID,
  MEAL_ID,
  AMOUNT,
  CALORIES
) VALUES (
  [IDENTIFICADOR DO ALIMENTO],
  [IDENTIFICADOR DA REFEIÇÃO],
  [QUANTIDADE DO ALIMENTO],
  [QUANTIDADE DE CALORIAS DO ALIMENTO]
);

UPDATE T_HT_FOOD_ITEM SET
  FOOD_ID = [IDENTIFICADOR DO ALIMENTO],
  AMOUNT = [QUANTIDADE DO ALIMENTO],
  CALORIES = [QUANTIDADE DE CALORIAS DO ALIMENTO]
WHERE MEAL_ID = [IDENTIFICADOR DA REFEIÇÃO];


--- Consultar todos os dados de todos os registros de alimentos
--- ingeridos de um determinado usuário, ordenando-os dos
--- registros mais recentes para os mais antigos (filtrar a
--- partir do seu código).

SELECT F.NAME, F.UNIT_PREFIX, FI.AMOUNT, FI.CALORIES, MT.NAME AS MEAL_TYPE, M.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_MEAL M ON U.USER_ID = M.USER_ID
JOIN T_HT_MEAL_TYPE MT ON M.MEAL_TYPE_ID = MT.MEAL_TYPE_ID
JOIN T_HT_FOOD_ITEM FI ON M.MEAL_ID = FI.MEAL_ID
JOIN T_HT_FOOD F ON FI.FOOD_ID = F.FOOD_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO]
ORDER BY M.DATE_TIME DESC;

--- Consultar todos os dados de um único registro de alimento
--- ingerido de um determinado usuário (filtrar a partir do
--- código do usuário e do código de alimento).

SELECT F.NAME, F.UNIT_PREFIX, FI.AMOUNT, FI.CALORIES, MT.NAME AS MEAL_TYPE, M.DATE_TIME
FROM T_HT_USER U
JOIN T_HT_MEAL M ON U.USER_ID = M.USER_ID
JOIN T_HT_MEAL_TYPE MT ON M.MEAL_TYPE_ID = MT.MEAL_TYPE_ID
JOIN T_HT_FOOD_ITEM FI ON M.MEAL_ID = FI.MEAL_ID
JOIN T_HT_FOOD F ON FI.FOOD_ID = F.FOOD_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO] AND F.FOOD_ID = [IDENTIFICADOR DO ALIMENTO];
