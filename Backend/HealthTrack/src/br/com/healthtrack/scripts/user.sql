--- DROP TABLE T_HT_USER CASCADE CONSTRAINTS;
--- DROP SEQUENCE SQ_HT_USER;

CREATE TABLE T_HT_USER(
  USER_ID    NUMBER       NOT NULL,
  EMAIL      VARCHAR2(25) NOT NULL,
  EMAIL_UN   AS (LOWER(EMAIL)),
  PASSWORD   VARCHAR2(15) NOT NULL,
  NICKNAME   VARCHAR2(25),
  BIRTH_DATE DATE         NOT NULL
);

CREATE SEQUENCE SQ_HT_USER INCREMENT BY 1 START WITH 1;

ALTER TABLE T_HT_USER ADD CONSTRAINT PK_HT_USER
  PRIMARY KEY (USER_ID);

ALTER TABLE T_HT_USER ADD CONSTRAINT UN_HT_USER_EMAIL
  UNIQUE (EMAIL_UN);

---

--- MODELO

INSERT INTO T_HT_USER (
  USER_ID,
  EMAIL,
  PASSWORD,
  NICKNAME,
  BIRTH_DATE,
) VALUES (
  [IDENTIFICADOR DO USUÁRIO],
  '[EMAIL DO USUÁRIO]',
  '[SENHA DO USUÁRIO]',
  '[APELIDO DO USUÁRIO]',
  '[DATA DE NASCIMENTO DO USUÁRIO]'
);

UPDATE T_HT_USER SET
  EMAIL = '[EMAIL DO USUÁRIO]',
  PASSWORD = '[SENHA DO USUÁRIO]',
  NICKNAME = '[APELIDO DO USUÁRIO]',
  BIRTH_DATE = '[DATA DE NASCIMENTO DO USUÁRIO]'
WHERE USER_ID = [IDENTIFICADOR DO USUÁRIO];


--- Consultar os dados de um determinado usuário
--- (filtrar a partir do seu código).

SELECT U.EMAIL, U.PASSWORD, U.NICKNAME, U.BIRTH_DATE
FROM T_HT_USER U
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO];

--- Consultar os dados básicos de um determinado
--- usuário, o último peso registrado e a última
--- pressão arterial registrada (filtrar a partir
--- do código de usuário.
SELECT U.EMAIL,
       U.NICKNAME,
       W.VALUE AS WEIGHT_VALUE,
       W.UNITY_PREFIX AS WEIGHT_UNITY_PREFIX,
       W.DATE_TIME AS WEIGHT_DATE_TIME,
       BD.DIASTOLIC_VALUE,
       BD.SYSTOLIC_VALUE,
       BD.UNIT_PREFIX AS BLOOD_PREASSURE_UNIT_PREFIX,
       BD.DATE_TIME AS BLOOD_PREASSURE_DATE_TIME
FROM T_HT_USER U
JOIN T_HT_WEIGHT W ON U.USER_ID = W.USER_ID
JOIN T_HT_BLOOD_PREASSURE BD ON BD.USER_ID = U.USER_ID
WHERE U.USER_ID = [IDENTIFICADOR DO USUÁRIO]
ORDER BY W.DATE_TIME, BD.DATE_TIME DESC LIMIT 1;
